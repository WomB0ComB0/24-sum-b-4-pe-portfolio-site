name: Run tests on any Push event

on:
  push:
    tags:
      - '!refs/tags/*'
    branches:
      - '*'

jobs:
  run_tests:
    runs-on: [ubuntu-latest]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          while ! mysqladmin ping -h"127.0.0.1" --silent; do
            echo "Waiting for database connection..."
            sleep 2
          done

      - name: Create test database
        run: |
          mysql -h 127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS portfolio_test;"
          mysql -h 127.0.0.1 -uroot -proot portfolio_test -e "
            CREATE TABLE IF NOT EXISTS Hobbies (
              id INT AUTO_INCREMENT PRIMARY KEY,
              name VARCHAR(255) NOT NULL,
              description TEXT NOT NULL,
              image VARCHAR(255) NOT NULL,
              created_at DATETIME NOT NULL,
              updated_at DATETIME NOT NULL
            );
            CREATE TABLE IF NOT EXISTS Projects (
              id INT AUTO_INCREMENT PRIMARY KEY,
              name VARCHAR(255) NOT NULL,
              description TEXT NOT NULL,
              url VARCHAR(255) NOT NULL,
              language VARCHAR(255) NOT NULL,
              created_at DATETIME NOT NULL,
              updated_at DATETIME NOT NULL
            );
            CREATE TABLE IF NOT EXISTS Timeline (
              id INT AUTO_INCREMENT PRIMARY KEY,
              title VARCHAR(255) NOT NULL,
              description TEXT NOT NULL,
              date DATETIME NOT NULL,
              created_at DATETIME NOT NULL,
              updated_at DATETIME NOT NULL
            );
          "

      - name: Load environment variables
        run: cp .env.example .env

      - name: Initialize Database
        run: |
          python -c "from portfolio import create_app; create_app()"

      - name: Run tests
        env:
          FLASK_ENV: testing
          PYTHONPATH: ${{ github.workspace }}
          TOKEN: testing
          TESTING: True
        run: |
          flask run --host=0.0.0.0 --port=5000 &
          while ! nc -z localhost 5000; do   
            sleep 1
          done
          pytest